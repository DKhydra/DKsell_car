<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fnzb.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fnzb.dao.entity.UserLogin" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_name, password,last_time, gmt_create, gmt_modified
  </sql>

  <select id="selectUserForPC" resultMap="BaseResultMap" parameterType="com.fnzb.dao.entity.UserLogin" >
    select 
    <include refid="Base_Column_List" />
    from sc_user_login
    where
    login_name = #{loginName,jdbcType=VARCHAR}
    and
    password = #{password,jdbcType=VARCHAR}
  </select>



  <!--<delete id="deleteUserById" parameterType="java.util.List" >-->
    <!--delete-->
    <!--from sc_user-->
    <!--where id in-->
    <!--<foreach collection="list" open="(" close=")" separator="," item="id" index="index">-->
      <!--#{id,jdbcType=BIGINT}-->
    <!--</foreach>-->
  <!--</delete>-->


  <insert id="insert" parameterType="com.fnzb.dao.entity.UserLogin" >
    insert into sc_user_login (login_name,password,gmt_create)
    values (#{loginName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},
      #{gmtCreate,jdbcType=TIMESTAMP})
  </insert>


  <update id="updateUserLogin" parameterType="com.fnzb.dao.entity.UserLogin" >
    update sc_user_login
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where  id = #{id,jdbcType=BIGINT}
  </update>
</mapper>